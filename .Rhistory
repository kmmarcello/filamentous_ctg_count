#library(cluster)
#library(factoextra)
library(ggdendro)
library(grid)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
summary(filament_cyanos)
head(filament_cyanos)
filament_cyanos <- clean_names(filament_cyanos)
names(filament_cyanos)
head(filament_cyanos)
gene_data_organism <- filament_cyanos %>%
select(organism, contains("gene_")) %>% # get rid of the gene_ part for the final pres.
pivot_longer(-organism,
names_to = "gene",
values_to = "gene_count") %>%
filter(!is.na(gene_count))
gene_data_organism
gene_data_organism$gene_count <- as.numeric(gene_data_organism$gene_count) # needs to be numeric for scale()
lapply(gene_data_organism, class)
clust_map_org <- gene_data_organism %>% # make pivot_wider for scale()
pivot_wider(names_from = "gene",
values_from = "gene_count")
clust_map_org
#gene_data_organism$gene_count <- as.numeric(gene_data_organism$gene_count) # needs to be numeric for scale()
lapply(clust_map_org, class)
scaled_clust_map <- clust_map_org
scaled_clust_map[, c(2:22)] <- scale(scaled_clust_map[, 2:22])
scaled_clust_map
lapply(scaled_clust_map, class)
heatmap(scaled_clust_map, scale = "none")
as.matrix(sapply(scaled_clust_map, as.numeric))
heatmap(scaled_clust_map, scale = "row")
matrix_heatmap <- as.matrix(sapply(scaled_clust_map, as.numeric))
heatmap(matrix_heatmap, scale = "row")
matrix_heatmap <- as.matrix(sapply(scaled_clust_map, as.numeric)) %>%
filter(!is.na())
matrix_heatmap <- as.matrix(sapply(scaled_clust_map, as.numeric))
lapply(scaled_clust_map, class)
matrix_heatmap <- as.matrix(sapply(scaled_clust_map, as.numeric))
matrix_heatmap <- as.matrix(sapply(scaled_clust_map, as.numeric))
matrix_heatmap
heatmap(matrix_heatmap, scale = "row")
matrix_heatmap <- as.matrix(sapply(scaled_clust_map))
knitr::opts_chunk$set(echo = TRUE)
#install.packages("viridisLite")
#install.packages("svglite")
#install.packages("factoextra")
#install.packages("cluster")
#install.packages("ggdendro")
#install.packages("grid")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
library(skimr)
library(viridis)
library(shiny)
library(shinydashboard)
library(devtools)
library(svglite)
#library(cluster)
#library(factoextra)
library(ggdendro)
library(grid)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
summary(filament_cyanos)
head(filament_cyanos)
filament_cyanos <- clean_names(filament_cyanos)
names(filament_cyanos)
head(filament_cyanos)
gene_data_organism <- filament_cyanos %>%
select(organism, contains("gene_")) %>% # get rid of the gene_ part for the final pres.
pivot_longer(-organism,
names_to = "gene",
values_to = "gene_count") %>%
filter(!is.na(gene_count))
gene_data_organism
gene_data_organism$gene_count <- as.numeric(gene_data_organism$gene_count) # needs to be numeric for scale()
lapply(gene_data_organism, class)
clust_map_org <- gene_data_organism %>% # make pivot_wider for scale()
pivot_wider(names_from = "gene",
values_from = "gene_count")
clust_map_org
#gene_data_organism$gene_count <- as.numeric(gene_data_organism$gene_count) # needs to be numeric for scale()
lapply(clust_map_org, class)
scaled_clust_map <- clust_map_org
scaled_clust_map[, c(2:22)] <- scale(scaled_clust_map[, 2:22])
scaled_clust_map
lapply(scaled_clust_map, class)
matrix_heatmap <- as.matrix(sapply(scaled_clust_map))
matrix_heatmap <- data.matrix(scaled_clust_map)
matrix_heatmap
heatmap(matrix_heatmap, scale = "row")
heatmap(matrix_heatmap, scale = "none")
matrix_heatmap[, c(2:22)] <- data.matrix(scaled_clust_map[, c(2:22)])
matrix_heatmap
heatmap(matrix_heatmap, scale = "none")
matrix_heatmap[, c(2:22)] <- data.matrix(scaled_clust_map[, c(2:22)])
#matrix_heatmap
lapply(matrix_heatmap, class)
matrix_heatmap <- data.matrix(scaled_clust_map, as.numeric)
matrix_heatmap
heatmap(matrix_heatmap, scale = "row")
matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap <- data.matrix(scaled_clust_map, as.numeric)
matrix_heatmap
matrix_heatmap <- data.matrix(scaled_clust_map)
matrix_heatmap[is.na(matrix_heatmap)] <- 0
#matrix_heatmap <- data.matrix(scaled_clust_map, as.numeric)
matrix_heatmap
heatmap(matrix_heatmap, scale = "row")
heatmap(matrix_heatmap, scale = "none")
heatmap(matrix_heatmap, scale = "row")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("viridisLite")
#install.packages("svglite")
#install.packages("factoextra")
#install.packages("cluster")
#install.packages("ggdendro")
#install.packages("grid")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
library(skimr)
library(viridis)
library(shiny)
library(shinydashboard)
library(devtools)
library(svglite)
#library(cluster)
#library(factoextra)
library(ggdendro)
library(grid)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
summary(filament_cyanos)
head(filament_cyanos)
filament_cyanos <- clean_names(filament_cyanos)
names(filament_cyanos)
head(filament_cyanos)
gene_data_organism <- filament_cyanos %>%
select(organism, contains("gene_")) %>% # get rid of the gene_ part for the final pres.
pivot_longer(-organism,
names_to = "gene",
values_to = "gene_count") %>%
filter(!is.na(gene_count))
gene_data_organism
gene_data_organism$gene_count <- as.numeric(gene_data_organism$gene_count) # needs to be numeric for scale()
lapply(gene_data_organism, class)
clust_map_org <- gene_data_organism %>% # make pivot_wider for scale()
pivot_wider(names_from = "gene",
values_from = "gene_count")
clust_map_org
scaled_clust_map <- clust_map_org
scaled_clust_map[, c(2:22)] <- scale(scaled_clust_map[, 2:22])
scaled_clust_map
lapply(scaled_clust_map, class)
matrix_heatmap <- data.matrix(scaled_clust_map)
matrix_heatmap[is.na(matrix_heatmap)] <- 0
#matrix_heatmap <- data.matrix(scaled_clust_map, as.numeric)
matrix_heatmap
heatmap(matrix_heatmap, scale = "row")
matrix.please<-function(scaled_clust_map) {
m<-as.matrix(scaled_clust_map[,-1])
rownames(m)<-scaled_clust_map[,1]
m
}
matrix.please<-function(scaled_clust_map) {
m<-as.matrix(scaled_clust_map[,-1])
rownames(m)<-scaled_clust_map[,1]
m
}
matrix.please()
matrix.please<-function(scaled_clust_map) {
m<-as.matrix(scaled_clust_map[,-1])
rownames(m)<-scaled_clust_map[,1]
m
}
matrix.please
matrix.please<-function(scaled_clust_map) {
m<-as.matrix(scaled_clust_map[,-1])
rownames(m)<-scaled_clust_map[,1]
m
}
scaled_clust_map
matrix.please<-function(scaled_clust_map) {
m<-as.matrix(scaled_clust_map[,-1])
rownames(m)<-scaled_clust_map[,1]
m
}
M <- matrix.please(X)
matrix.please<-function(scaled_clust_map) {
m<-as.matrix(scaled_clust_map[,-1])
rownames(m)<-scaled_clust_map[,1]
m
}
M <- matrix.please(scaled_clust_map)
rnames <- scaled_clust_map[,1]                            # assign labels in column 1 to "rnames"
mat_data <- scaled_clust_map.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
rnames <- scaled_clust_map[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
rownames(mat_data) <- rnames                  # assign row names
rnames <- scaled_clust_map$organism[,1]                            # assign labels in column 1 to "rnames"
rnames <- scaled_clust_map$organism[,1]                            # assign labels in column 1 to "rnames"
#matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap[is.na(matrix_heatmap)] <- 0
rnames <- matrix_heatmap$organism[,1]
#matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap[is.na(matrix_heatmap)] <- 0
rnames <- matrix_heatmap[,1]
mat_data <- data.matrix(matrix_heatmap[,2:ncol(matrix_heatmap)])
matrix_heatmap[is.na(matrix_heatmap)] <- 0
rownames(mat_data) <- rnames
#matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap[is.na(matrix_heatmap)] <- 0
rnames <- matrix_heatmap[,1]
mat_data <- data.matrix(matrix_heatmap[,2:ncol(matrix_heatmap)])
matrix_heatmap[is.na(matrix_heatmap)] <- 0
rownames(mat_data) <- rnames
mat_data
#matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap[is.na(matrix_heatmap)] <- 0
rnames <- matrix_heatmap[,1]
mat_data <- data.matrix(matrix_heatmap[,2:ncol(matrix_heatmap)])
mat_data[is.na(mat_data)] <- 0
rownames(mat_data) <- rnames
mat_data
#matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap[is.na(matrix_heatmap)] <- 0
rnames <- scaled_clust_map[,1]
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
rownames(mat_data) <- rnames
#matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap[is.na(matrix_heatmap)] <- 0
rnames <- scaled_clust_map$organism[,1]
#matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap[is.na(matrix_heatmap)] <- 0
rnames <- scaled_clust_map[,1]
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
rownames(mat_data) <- rnames
#matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap[is.na(matrix_heatmap)] <- 0
rnames <- scaled_clust_map$X1[,1]
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
rownames(mat_data) <- rnames
mat_data
#matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap[is.na(matrix_heatmap)] <- 0
rnames <- scaled_clust_map[,1]
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
rownames(mat_data) <- rnames
#matrix_heatmap <- data.matrix(scaled_clust_map)
#matrix_heatmap[is.na(matrix_heatmap)] <- 0
rnames <- scaled_clust_map$organism[,1]
knitr::opts_chunk$set(echo = TRUE)
#install.packages("viridisLite")
#install.packages("svglite")
#install.packages("factoextra")
#install.packages("cluster")
#install.packages("ggdendro")
#install.packages("grid")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
library(skimr)
library(viridis)
library(shiny)
library(shinydashboard)
library(devtools)
library(svglite)
library(cluster)
library(factoextra)
library(ggdendro)
library(grid)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
summary(filament_cyanos)
filament_cyanos <- clean_names(filament_cyanos)
names(filament_cyanos)
head(filament_cyanos)
gene_data_organism <- filament_cyanos %>%
select(organism, contains("gene_")) %>% # get rid of the gene_ part for the final pres.
pivot_longer(-organism,
names_to = "gene",
values_to = "gene_count") %>%
filter(!is.na(gene_count))
gene_data_organism
gene_data_organism$gene_count <- as.numeric(gene_data_organism$gene_count) # needs to be numeric for scale()
lapply(gene_data_organism, class)
clust_map_org <- gene_data_organism %>% # make pivot_wider for scale()
pivot_wider(names_from = "gene",
values_from = "gene_count")
clust_map_org
scaled_clust_map <- clust_map_org
scaled_clust_map[, c(2:22)] <- scale(scaled_clust_map[, 2:22])
scaled_clust_map
m <- c("average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
ac <- function(x) {
agnes(scaled_clust_map, method = x)$ac
}
sapply(m, ac)
clust <- agnes(scaled_clust_map, method = "ward")
pltree(clust, cex = 0.6, hang = -1, main = "Dendrogram")
#gap_stat <- clusGap(scaled_clust_map, FUN = hcut, nstart = 25, K.max = 10, B = 50)
#fviz_gap_stat(gap_stat)
pltree(clust, cex = 0.6, hang = -1, main = "Dendrogram", rotate = TRUE)
pltree(clust, cex = 0.6, hang = -1, main = "Dendrogram")
knitr::opts_chunk$set(echo = TRUE)
rnames <- scaled_clust_map[-1,1]
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
rownames(mat_data) <- rnames
matrix_heatmap <- data.matrix(scaled_clust_map)
matrix_heatmap[is.na(matrix_heatmap)] <- 0
#matrix_heatmap <- data.matrix(scaled_clust_map, as.numeric)
matrix_heatmap
View(scaled_clust_map)
rnames <- scaled_clust_map[,1]
rnames
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
rownames(mat_data) <- rnames
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data<mat_data[,colnames(mat_data)!="organism"]
M
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data<mat_data[,colnames(mat_data)!="organism"]
#rownames(mat_data) <- rnames
mat_data
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data[,colnames(mat_data)!="organism"]
rownames(mat_data) <- rnames
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data[,colnames(mat_data)!="organism"]
#rownames(mat_data) <- rnames
mat_data
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data[,colnames(mat_data)!="organism"]
#rownames(mat_data) <- rnames
mat_data
matrix_heatmap <- data.matrix(scaled_clust_map)
matrix_heatmap[is.na(matrix_heatmap)] <- 0
#matrix_heatmap <- data.matrix(scaled_clust_map, as.numeric)
matrix_heatmap
heatmap(mat_data, scale = "row")
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data[,colnames(mat_data)!="organism"]
rownames(mat_data) <- rnames   # this does not work, gives error
organisim <- as.list(rnames)
organisim
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data[,colnames(mat_data)!="organism"]
#rownames(mat_data) <- rnames   # this does not work, gives error:
# Error in dimnames(x) <- dn :length of 'dimnames' [1] not equal to array extent
rownames(mat_data) <- rnames
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data[,colnames(mat_data)!="organism"]
#rownames(mat_data) <- rnames   # this does not work, gives error:
# Error in dimnames(x) <- dn :length of 'dimnames' [1] not equal to array extent
rownames(mat_data) <- organisim
organisim <- as.list(rnames)
organisim
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data[,colnames(mat_data)!="organism"]
#rownames(mat_data) <- rnames   # this does not work, gives error:
# Error in dimnames(x) <- dn :length of 'dimnames' [1] not equal to array extent
rownames(mat_data) <- organisim
knitr::opts_chunk$set(echo = TRUE)
#install.packages("viridisLite")
#install.packages("svglite")
#install.packages("factoextra")
#install.packages("cluster")
#install.packages("ggdendro")
#install.packages("grid")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
library(skimr)
library(viridis)
library(shiny)
library(shinydashboard)
library(devtools)
library(svglite)
#library(cluster)
#library(factoextra)
library(ggdendro)
library(grid)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
summary(filament_cyanos)
head(filament_cyanos)
filament_cyanos <- clean_names(filament_cyanos)
names(filament_cyanos)
head(filament_cyanos)
gene_data_organism <- filament_cyanos %>%
select(organism, contains("gene_")) %>% # get rid of the gene_ part for the final pres.
pivot_longer(-organism,
names_to = "gene",
values_to = "gene_count") %>%
filter(!is.na(gene_count))
gene_data_organism
gene_data_organism$gene_count <- as.numeric(gene_data_organism$gene_count) # needs to be numeric for scale()
lapply(gene_data_organism, class)
clust_map_org <- gene_data_organism %>% # make pivot_wider for scale()
pivot_wider(names_from = "gene",
values_from = "gene_count")
clust_map_org
scaled_clust_map <- clust_map_org
scaled_clust_map[, c(2:22)] <- scale(scaled_clust_map[, 2:22])
scaled_clust_map
#lapply(scaled_clust_map, class)
rnames <- scaled_clust_map[,1]
rnames
organisim <- as.list(rnames)
organisim
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data[,colnames(mat_data)!="organism"]
#rownames(mat_data) <- rnames   # this does not work, gives error:
# Error in dimnames(x) <- dn :length of 'dimnames' [1] not equal to array extent
rownames(mat_data) <- organisim
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data[,colnames(mat_data)!="organism"]
#rownames(mat_data) <- rnames   # this does not work, gives error:
# Error in dimnames(x) <- dn :length of 'dimnames' [1] not equal to array extent
row.names(mat_data) <- organisim
#organisim <- as.list(rnames)
row.names(organisim)
row.names(organisim) <- rnames
rnames <- scaled_clust_map[,1]
rnames
#organisim <- as.list(rnames)
row.names(organisim)
row.names(organisim) <- rnames
#organisim <- as.list(rnames)
#row.names(organisim)
row.names(organisim) <- rnames
organisim <- as.list(rnames)
organisim
mat_data <- data.matrix(scaled_clust_map[,2:ncol(scaled_clust_map)])
mat_data[is.na(mat_data)] <- 0
mat_data[,colnames(mat_data)!="organism"]
#rownames(mat_data) <- rnames   # this does not work, gives error:
# Error in dimnames(x) <- dn :length of 'dimnames' [1] not equal to array extent
rownames(mat_data) <- c("Nostoc punctiforme PCC 73102", "Oscillatoria acuminata PCC 6304", "Oscillatoria nigro-viridis PCC 7112", "Nostoc flagelliforme CCNUN1", "Trichodesmium erythraeum IMS101", "Nostoc sphaeroides", "Leptolyngbya boryana NIES-2135", "Nostoc azollae' 0708", "Dolichospermum flos-aquae CCAP 1403/13F", "Anabaena cylindrica PCC 7122", "Nostoc sp. 'Peltigera membranacea cyanobiont' N6", "Nostoc sp. TCL240-02", "Nostoc sp. C052", "Nostoc edaphicum CCNP1411",  "Nostoc sp. C057", "Microcoleus sp. PCC 7113", "Nostoc sp. ATCC 53789",  "Nostoc sp. 'Lobaria pulmonaria (5183) cyanobiont'", "Calothrix sp. PCC 7507",  "Anabaena sp. YBS01",  "Nostoc sp. CENA543", "Nostoc sp. TCL26-01",  "Nostoc sp. PCC 7524", "Nostoc sphaeroides CCNUC1", "Nostoc sp. NIES-3756", "Nostoc sp. PCC 7120 = FACHB-418", "Leptolyngbya sp. NIES-3755","Leptolyngbya boryana dg5",  "Leptolyngbya boryana IAM M-101",  "Anabaena sp. WA102", "Thermoleptolyngbya sp. PKUAC-SCTA183", "Leptolyngbya sp. O-77",  "Dolichospermum sp. UHCC 0315A", "Leptolyngbya sp. PCC 7376", "Pseudanabaena sp. ABRG5-3", "Pseudanabaena sp. PCC 7367", "Anabaena sp. 90", "Leptolyngbya D1", "Phormidesmis", "Leptolyngbya D3", "Anabaena")
mat_data
heatmap(mat_data, scale = "row")
heatmap.2(mat_data, scale = "row")
heatmap(mat_data, scale = "row")
install.packages("heatmap.2")
heatmap.2(mat_data, scale = "row")
heatmap(mat_data, scale = "row")
heatmap(mat_data, scale = "row", row_names_gp = gpar(fontsize = 6)
heatmap(mat_data, scale = "row", row_names_gp = gpar(fontsize = 6))
install.packages("gplots")
heatmap.2(mat_data, scale = "row")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
library(skimr)
library(viridis)
library(shiny)
library(shinydashboard)
library(devtools)
library(svglite)
#library(cluster)
#library(factoextra)
library(ggdendro)
library(grid)
library(gplots)
heatmap.2(mat_data, scale = "row")
heatma
heatmap.2(mat_data, scale = "row")
png(file="fil_matrix_heatmap.png")
heatmap.2(mat_data, scale = "row")
dev.off()
install.packages(c("brew", "bslib", "classInt", "commonmark", "crayon", "desc", "devtools", "dplyr", "DT", "e1071", "emmeans", "fansi", "fontawesome", "generics", "gert", "ggforce", "ggmap", "ggVennDiagram", "gh", "gitcreds", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "magrittr", "maptools", "openssl", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "png", "polyclip", "proxy", "Rcpp", "RcppEigen", "RcppTOML", "reticulate", "rgdal", "rgeos", "roxygen2", "rversions", "s2", "sass", "sf", "shiny", "sp", "svglite", "testthat", "tidyr", "tidyselect", "tweenr", "units", "usethis", "vegan", "viridisLite", "whisker", "wk", "zip"))
install.packages(c("brew", "bslib", "classInt", "commonmark", "crayon", "desc", "devtools", "dplyr", "DT", "e1071", "emmeans", "fansi", "fontawesome", "generics", "gert", "ggforce", "ggmap", "ggVennDiagram", "gh", "gitcreds", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "magrittr", "maptools", "openssl", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "png", "polyclip", "proxy", "Rcpp", "RcppEigen", "RcppTOML", "reticulate", "rgdal", "rgeos", "roxygen2", "rversions", "s2", "sass", "sf", "shiny", "sp", "svglite", "testthat", "tidyr", "tidyselect", "tweenr", "units", "usethis", "vegan", "viridisLite", "whisker", "wk", "zip"))
install.packages(c("brew", "bslib", "classInt", "commonmark", "crayon", "desc", "devtools", "dplyr", "DT", "e1071", "emmeans", "fansi", "fontawesome", "generics", "gert", "ggforce", "ggmap", "ggVennDiagram", "gh", "gitcreds", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "magrittr", "maptools", "openssl", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "png", "polyclip", "proxy", "Rcpp", "RcppEigen", "RcppTOML", "reticulate", "rgdal", "rgeos", "roxygen2", "rversions", "s2", "sass", "sf", "shiny", "sp", "svglite", "testthat", "tidyr", "tidyselect", "tweenr", "units", "usethis", "vegan", "viridisLite", "whisker", "wk", "zip"))
install.packages(c("brew", "bslib", "classInt", "commonmark", "crayon", "desc", "devtools", "dplyr", "DT", "e1071", "emmeans", "fansi", "fontawesome", "generics", "gert", "ggforce", "ggmap", "ggVennDiagram", "gh", "gitcreds", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "magrittr", "maptools", "openssl", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "png", "polyclip", "proxy", "Rcpp", "RcppEigen", "RcppTOML", "reticulate", "rgdal", "rgeos", "roxygen2", "rversions", "s2", "sass", "sf", "shiny", "sp", "svglite", "testthat", "tidyr", "tidyselect", "tweenr", "units", "usethis", "vegan", "viridisLite", "whisker", "wk", "zip"))
install.packages(c("brew", "bslib", "classInt", "commonmark", "crayon", "desc", "devtools", "dplyr", "DT", "e1071", "emmeans", "fansi", "fontawesome", "generics", "gert", "ggforce", "ggmap", "ggVennDiagram", "gh", "gitcreds", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "magrittr", "maptools", "openssl", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "png", "polyclip", "proxy", "Rcpp", "RcppEigen", "RcppTOML", "reticulate", "rgdal", "rgeos", "roxygen2", "rversions", "s2", "sass", "sf", "shiny", "sp", "svglite", "testthat", "tidyr", "tidyselect", "tweenr", "units", "usethis", "vegan", "viridisLite", "whisker", "wk", "zip"))
install.packages(c("brew", "bslib", "classInt", "commonmark", "crayon", "desc", "devtools", "dplyr", "DT", "e1071", "emmeans", "fansi", "fontawesome", "generics", "gert", "ggforce", "ggmap", "ggVennDiagram", "gh", "gitcreds", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "magrittr", "maptools", "openssl", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "png", "polyclip", "proxy", "Rcpp", "RcppEigen", "RcppTOML", "reticulate", "rgdal", "rgeos", "roxygen2", "rversions", "s2", "sass", "sf", "shiny", "sp", "svglite", "testthat", "tidyr", "tidyselect", "tweenr", "units", "usethis", "vegan", "viridisLite", "whisker", "wk", "zip"))
install.packages(c("brew", "bslib", "classInt", "commonmark", "crayon", "desc", "devtools", "dplyr", "DT", "e1071", "emmeans", "fansi", "fontawesome", "generics", "gert", "ggforce", "ggmap", "ggVennDiagram", "gh", "gitcreds", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "magrittr", "maptools", "openssl", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "png", "polyclip", "proxy", "Rcpp", "RcppEigen", "RcppTOML", "reticulate", "rgdal", "rgeos", "roxygen2", "rversions", "s2", "sass", "sf", "shiny", "sp", "svglite", "testthat", "tidyr", "tidyselect", "tweenr", "units", "usethis", "vegan", "viridisLite", "whisker", "wk", "zip"))
knitr::opts_chunk$set(echo = TRUE)
#install.packages("viridisLite")
#install.packages("svglite")
#install.packages("factoextra")
#install.packages("cluster")
#install.packages("ggdendro")
#install.packages("grid")
library(tidyverse)
